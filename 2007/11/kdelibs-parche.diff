Index: kfile/kfiletreeview.cpp
===================================================================
--- kfile/kfiletreeview.cpp	(revisi√≥n: 743156)
+++ kfile/kfiletreeview.cpp	(copia de trabajo)
@@ -26,13 +26,14 @@
 #include <kdirlister.h>
 #include <kdirmodel.h>
 #include <kfileitemdelegate.h>
+#include <kdirsortfilterproxymodel.h>
 #include <kurl.h>
 
 class KFileTreeView::Private
 {
     public:
         Private(KFileTreeView *parent)
-            : mParent(parent)
+            : q(parent)
         {
         }
 
@@ -42,8 +43,9 @@ class KFileTreeView::Private
         void _k_currentChanged(const QModelIndex&, const QModelIndex&);
         void _k_expanded(const QModelIndex&);
 
-        KFileTreeView *mParent;
+        KFileTreeView *q;
         KDirModel *mModel;
+        KDirSortFilterProxyModel *pModel;
 };
 
 KUrl KFileTreeView::Private::urlForIndex(const QModelIndex &index) const
@@ -55,34 +57,40 @@ KUrl KFileTreeView::Private::urlForIndex
 
 void KFileTreeView::Private::_k_activated(const QModelIndex &index)
 {
-    const KUrl url = urlForIndex(index);
+    const KUrl url = urlForIndex(pModel->mapToSource(index));
     if (url.isValid())
-        emit mParent->activated(url);
+        emit q->activated(url);
 }
 
 void KFileTreeView::Private::_k_currentChanged(const QModelIndex &currentIndex, const QModelIndex&)
 {
-    const KUrl url = urlForIndex(currentIndex);
+    const KUrl url = urlForIndex(pModel->mapToSource(currentIndex));
     if (url.isValid())
-        emit mParent->currentChanged(url);
+        emit q->currentChanged(url);
 }
 
 void KFileTreeView::Private::_k_expanded(const QModelIndex &index)
 {
-    mParent->selectionModel()->clearSelection();
-    mParent->selectionModel()->setCurrentIndex(index, QItemSelectionModel::SelectCurrent);
-    mParent->scrollTo(index);
+    QModelIndex targetIndex = pModel->mapFromSource(index);
+
+    q->selectionModel()->clearSelection();
+    q->selectionModel()->setCurrentIndex(targetIndex, QItemSelectionModel::SelectCurrent);
+    q->scrollTo(targetIndex, QAbstractItemView::PositionAtTop);
 }
 
 KFileTreeView::KFileTreeView(QWidget *parent)
     : QTreeView(parent), d(new Private(this))
 {
-    d->mModel = new KDirModel(this);
+    KDirModel *dirModel = new KDirModel(this);
+    dirModel->dirLister()->openUrl(KUrl(QDir::root().absolutePath()));
 
-    setModel(d->mModel);
-    setItemDelegate(new KFileItemDelegate(this));
+    d->mModel = dirModel;
 
-    d->mModel->dirLister()->openUrl(KUrl(QDir::root().absolutePath()), KDirLister::Keep);
+    d->pModel = new KDirSortFilterProxyModel(this);
+    d->pModel->setSourceModel(dirModel);
+
+    setModel(d->pModel);
+    setItemDelegate(new KFileItemDelegate(this));
 
     connect(this, SIGNAL(activated(const QModelIndex&)),
             this, SLOT(_k_activated(const QModelIndex&)));
@@ -99,7 +107,7 @@ KFileTreeView::~KFileTreeView()
 
 KUrl KFileTreeView::currentUrl() const
 {
-    return d->urlForIndex(currentIndex());
+    return d->urlForIndex(d->pModel->mapToSource(currentIndex()));
 }
 
 KUrl KFileTreeView::selectedUrl() const
@@ -149,12 +157,14 @@ void KFileTreeView::setShowHiddenFiles(b
 
 void KFileTreeView::setCurrentUrl(const KUrl &url)
 {
-    QModelIndex index = d->mModel->indexForUrl(url);
+    QModelIndex index = d->pModel->mapFromSource(d->mModel->indexForUrl(url));
 
     if (!index.isValid()) {
+        // problematic ! (ereslibre)
         d->mModel->expandToUrl(url);
         return;
     }
+
     selectionModel()->clearSelection();
     selectionModel()->setCurrentIndex(index, QItemSelectionModel::SelectCurrent);
     scrollTo(index);
